buildscript {
	ext {
		springBootVersion = '2.2.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'
apply plugin: 'maven-publish'

group = "$group"
version = "$version"
archivesBaseName = "$image_name"
sourceCompatibility = "$java_version"

repositories {
	mavenCentral()
	maven(){
		url "$nexus_url" 
	}
}
dependencyManagement {
  imports {
  	mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR3'
 }
}

configurations.all {
       resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion "5.2.19.RELEASE"
        }
    }
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.thoughtworks.xstream') {
            details.useVersion "1.4.18"
        }
    }

}

dependencies {
	compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.4.10.RELEASE'
	compile group: 'org.owasp.esapi', name: 'esapi', version: '2.2.1.1'
	compile('org.json:json:20180813')
		
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.eka.physicalstrade.PhysicalsTradeApplication'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
bootJar {
    manifest {
        attributes ('Version': "$version",
        'Revision' : System.properties['revision']==null?"not set":System.properties['revision'],
        'Date': new java.text.SimpleDateFormat("ddMMMMyyyy").format(new Date()),
        'Time': new java.text.SimpleDateFormat("HH:mm").format(new Date()))
    }
    
}
publishing {
    publications {
        impl(MavenPublication) {
               artifactId archivesBaseName
            from components.java
              
        }
    }   
    repositories {
	  maven {
			 url "$nexus_url"  
			 credentials {
				  username = 'admin'
				  password = 'admin123'
			 }
		  }
    }
}
